services:
  frontend:
    image: ghcr.io/tqs-voltconnect/voltconnect-frontend:latest
    environment:
      - API_BASE_URL=http://deti-tqs-04.ua.pt/api # May need to be changed accordingly to the backend URL
    depends_on:
      - backend
    restart: always

  backend:
    image: ghcr.io/tqs-voltconnect/voltconnect-backend:latest
    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db_pg:5432/voltconnect
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
    depends_on:
      - db_pg
    restart: always
    expose:
      - "8080"

  db_pg:
    image: postgres:latest
    environment:
      POSTGRES_DB: voltconnect
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 30s
      timeout: 10s
      retries: 5
    restart: always

  postgres_exporter:
    image: wrouesnel/postgres_exporter
    environment:
      - DATA_SOURCE_NAME=postgresql://postgres:postgres@db_pg:5432/voltconnect?sslmode=disable
    ports:
      - "9187:9187"
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - frontend
      - backend
    restart: always

  watchtower:
    image: containrrr/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /root/.docker/config.json:/config.json:ro
    environment:
      - WATCHTOWER_POLL_INTERVAL=60
      - WATCHTOWER_CLEANUP=true
      - WATCHTOWER_INCLUDE_RESTARTING=true
      - WATCHTOWER_ROLLING_RESTART=true
      - WATCHTOWER_TRACE=true
      - REGISTRY_AUTH=true
    restart: always

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    restart: always

  grafana:
    image: grafana/grafana
    container_name: grafana
    environment:
      GF_SECURITY_ADMIN_PASSWORD: "admin"  # CHANGE THIS
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    restart: always
    volumes:
      - grafana_data:/var/lib/grafana

volumes:
  pg_data:
  grafana_data: